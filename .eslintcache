[{"C:\\PROJECT\\React\\it-company\\src\\index.js":"1","C:\\PROJECT\\React\\it-company\\src\\App.js":"2","C:\\PROJECT\\React\\it-company\\src\\component\\header\\Header.js":"3","C:\\PROJECT\\React\\it-company\\src\\component\\Theme.js":"4","C:\\PROJECT\\React\\it-company\\src\\component\\p404\\P404.js":"5","C:\\PROJECT\\React\\it-company\\src\\context\\themeContext.js":"6","C:\\PROJECT\\React\\it-company\\src\\component\\home\\Home.js":"7"},{"size":521,"mtime":1610659542520,"results":"8","hashOfConfig":"9"},{"size":756,"mtime":1610664353261,"results":"10","hashOfConfig":"9"},{"size":5998,"mtime":1610731188244,"results":"11","hashOfConfig":"9"},{"size":2266,"mtime":1610633138030,"results":"12","hashOfConfig":"9"},{"size":1151,"mtime":1610558466592,"results":"13","hashOfConfig":"9"},{"size":87,"mtime":1610043772391,"results":"14","hashOfConfig":"15"},{"size":11266,"mtime":1610732409802,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1tlgjv5",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1nh1yhu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},"C:\\PROJECT\\React\\it-company\\src\\index.js",[],["36","37"],"C:\\PROJECT\\React\\it-company\\src\\App.js",["38"],"\nimport React from 'react';\nimport Header from \"./component/header/Header\";\nimport P404 from \"./component/p404/P404\"\nimport Home from \"./component/home/Home\";\nimport {withTheme} from './component/Theme'\nimport {\n\n  Switch,\n  Route, Redirect\n  \n} from \"react-router-dom\";\n\nfunction App(props) {\n  const {darkMode} = props\n\n  React.useEffect(()=>{\n    console.log('APP', darkMode)\n  },[darkMode])\n\n\n  const routes = (\n    <Switch>\n        <Route exact={true} path=\"/home\" component={Home}/>\n        <Route exact={true} path=\"/\" component={Home}/>\n        <Route path=\"/p404\" exact={true} render={() =><P404 />}/>\n       \n    </Switch>\n    )\n  \n    return (\n      <div>\n        <Header />\n        {routes}\n      </div>\n\n  );\n}\n\nexport default withTheme(App);\n","C:\\PROJECT\\React\\it-company\\src\\component\\header\\Header.js",["39","40","41"],"import React from 'react'\r\nimport { makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import iconLogo from '../../LogoCompany.png';\r\nimport {AppBar, Toolbar, Link, Tabs, Tab,  Switch } from '@material-ui/core'\r\nimport {FormControlLabel, FormGroup, Typography } from '@material-ui/core'\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n//import {ThemeContext} from '../../context/themeContext';\r\nimport {withTheme} from '../Theme' \r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n     // color: theme.palette.text.primary,\r\n      //backgroundColor: theme.palette.background.default,\r\n    },\r\n\r\n    title: {\r\n      flexGrow: 1,\r\n      color: theme.palette.text.primary\r\n    },\r\n\r\n    tabContainer:{\r\n      marginLeft: 'auto',\r\n      },\r\n    \r\n    leftGroup:{\r\n      marginLeft: 'auto',\r\n    },\r\n    \r\n    tab:{\r\n        //color:'#fafafa',\r\n    ...theme.tab,\r\n        //textShadow: '1px 1px #0000ff',\r\n        color: theme.palette.secondary.main,\r\n        minWidth:10,\r\n        marginLeft:'25px',\r\n\r\n    },\r\n    appbar:{\r\n        zIndex: theme.zIndex.modal+1,\r\n        //backgroundColor: theme.palette.background.paper,\r\n        //color: theme.palette.text.primary\r\n        //color: theme.palette.color.default\r\n      },\r\n\r\n\r\n    logoMini:{\r\n        height:\"5em\",\r\n        [theme.breakpoints.down(\"md\")]:{\r\n          height:\"4em\"  },\r\n        [theme.breakpoints.down(\"sm\")]:{\r\n          height:\"3em\"  }\r\n      },\r\n\r\n    logoContainer:{\r\n        outline: 'none',\r\n        padding:'10px',\r\n        \"&:hover\":{\r\n          backgroundColor:\"transparent\"\r\n        }\r\n      },\r\n    \r\n  }));\r\n\r\n  const IOSSwitch  = withStyles((theme)=>({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n      },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n          transform: 'translateX(16px)',\r\n          color: theme.palette.common.white,\r\n          \r\n          '& + $track': {\r\n            backgroundColor: theme.palette.secondary.main,// '#D2691E',\r\n            opacity: 1,\r\n            border: 'none',\r\n          },\r\n\r\n        },\r\n         '&$focusVisible $thumb': {\r\n          color: '#9f8240',\r\n          border: '6px solid #fff',\r\n         },\r\n    },\r\n\r\n    thumb: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[800]}`,\r\n      //border: `1px solid ${theme.palette.secondary.main}`,\r\n\r\n      backgroundColor: '#eeeeee',// theme.palette.primary.main,\r\n      opacity: 1,\r\n      transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n      //focusVisible: {}\r\n  })) (Switch);\r\n\r\n\r\nconst Header = (props) => {\r\n    const [value, setValue] = React.useState(0);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const classes = useStyles();\r\n    const {darkMode, setDarkMode} = props;\r\n\r\n    React.useEffect(()=>{\r\n      console.log(window.location.pathname,value)\r\n\r\n      // if (((window.location.pathname === \"/home\")||(window.location.pathname === \"/\")) && value !== 0){\r\n      //   setValue(0)\r\n      // }else if  (window.location.pathname === \"/p404\" && value !==  1) {\r\n      //   setValue(1)\r\n      // }\r\n\r\n    }, [value])\r\n\r\n    const tabs = (\r\n        <Tabs \r\n          aria-label=\"tabsPages\"\r\n          className={classes.tabContainer} \r\n          value={value} \r\n          onChange={null}\r\n          indicatorColor=\"secondary\"\r\n          scrollButtons=\"auto\"\r\n          color='primary'\r\n          height='20px'\r\n          //color='#fafafa'\r\n        >\r\n        <Tab\r\n            className={classes.tab} \r\n            selected ={value === 0}\r\n            component={Link}  \r\n            Link = '/home'\r\n            to='/home'\r\n            label=\"HOME\"\r\n            onClick={()=>setValue(0)} \r\n        />\r\n        <Tab \r\n        selected ={value === 1}\r\n        className={classes.tab} \r\n        component={Link} \r\n        to='/p404' \r\n        label='ABOUT'\r\n        onClick={()=>setValue(1)}\r\n        />\r\n        <Tab \r\n          selected ={value === 2}\r\n          className={classes.tab} \r\n          component={Link} \r\n          to='/about' \r\n          label ='SERVICES'\r\n          onClick={()=>setValue(2)}\r\n        />\r\n    \r\n        <Tab \r\n          selected ={value === 3}\r\n          hidden = {false}\r\n          className={classes.tab} \r\n          component={Link} \r\n          //to={isAuth ?'/logout' :'/auth'} \r\n          label ='OUR PROJECT'\r\n          onClick={()=>setValue(3)}\r\n        />\r\n       </Tabs>        \r\n    )\r\n\r\n     const handleClickNight = (event) =>{\r\n      //console.log('PALITTE', theme.palette);\r\n      setDarkMode(!darkMode)}\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appbar} color=\"primary\">\r\n            <Toolbar disableGutters={true}>\r\n            {/* <Button component={Link} to=\"/\" onClick={()=>setSelectedIndex(1)}\r\n                disableRipple\r\n                className={classes.logoContainer}> \r\n                <img alt=\"logo\" src={iconLogo} className={`${classes.logoMini} logoMini`} />\r\n            </Button>\r\n             <Typography variant=\"h6\" color=\"inherit\">\r\n                IT COMPANY\r\n            </Typography>  */}\r\n            \r\n            {matches ? null : tabs}\r\n            <FormGroup className={classes.tabContainer}>\r\n                    <FormControlLabel\r\n                        control={<IOSSwitch  \r\n                          checked={darkMode} \r\n                          onChange={handleClickNight} \r\n                          name=\"Night\" />}\r\n                        \r\n                        //label={getLanguage().toUpperCase()}\r\n                    />\r\n            </FormGroup>  \r\n        </Toolbar>\r\n        </AppBar>    \r\n    )\r\n}\r\n\r\nexport default withTheme(Header);","C:\\PROJECT\\React\\it-company\\src\\component\\Theme.js",[],"C:\\PROJECT\\React\\it-company\\src\\component\\p404\\P404.js",[],"C:\\PROJECT\\React\\it-company\\src\\context\\themeContext.js",[],["42","43"],"C:\\PROJECT\\React\\it-company\\src\\component\\home\\Home.js",["44","45","46","47"],"import React from 'react';\r\nimport macbook from '../../macbook-pro.png';\r\nimport laptopItservis from '../img/laptopItservis.jpg';\r\nimport logo from '../../LogoCompany.png';\r\nimport react from '../img/react.png';\r\nimport nodejs from '../img/nodejs.png';\r\nimport arduino2 from '../img/arduino2.png';\r\nimport delphi from '../img/delphi.png';\r\nimport html from '../img/html.png';\r\nimport vm from '../img/vm.png';\r\nimport sql from '../img/sql.png';\r\nimport sql2 from '../img/sql2.png';\r\nimport angular from '../img/angular.png';\r\nimport s1 from '../img/1c.png';\r\nimport rest from '../img/REST.png';\r\nimport network4 from '../img/network4.jpg';\r\n\r\nimport imgDatabase from '../img/database.jpg';\r\nimport imgServer from '../img/servers.jpg';\r\n//import imgRest from '../img/REST.png';\r\nimport imgWebDev from '../img/webdev.jpg';\r\nimport {withTheme} from '../Theme' \r\n\r\n\r\n\r\nimport { makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {Card, CardContent, CardMedia, Typography} from '@material-ui/core';\r\n//import styled, { keyframes } from 'styled-components';\r\n//import { Paper } from '@material-ui/core'\r\n//import Image from 'material-ui-image'\r\n//import { bounce } from 'react-animations';\r\n//import { Parallax } from 'react-scroll-parallax';\r\n//import { Parallax} from 'react-parallax';\r\nimport {Parallax, ParallaxLayer} from 'react-spring/renderprops-addons'\r\n\r\nimport './Home.css';\r\n\r\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\r\n\r\n//const urlNetwork = url('https://www.lfnetworking.org/wp-content/uploads/sites/55/2017/12/cog_bg_networking.jpg')\r\n// const Pink = ({ children }) => <span style={{ color: '#FF6AC1' }}>{children}</span>\r\n// const Yellow = ({ children }) => <span style={{ color: '#EFF59B' }}>{children}</span>\r\n// const Lightblue = ({ children }) => <span style={{ color: '#9AEDFE' }}>{children}</span>\r\n// const Green = ({ children }) => <span style={{ color: '#57EE89' }}>{children}</span>\r\n// const Blue = ({ children }) => <span style={{ color: '#57C7FF' }}>{children}</span>\r\n// const Gray = ({ children }) => <span style={{ color: '#909090' }}>{children}</span>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    HomeHeader: {\r\n        backgroundImage: {macbook},//\"../../macbook-pro.png\",\r\n        //height: '60em',\r\n       // width: '100%',\r\n        //textAlign: 'center',\r\n        //justifyContent: 'center',\r\n        marginTop: '6em',\r\n        display: 'relative',\r\n        //flexDirection: 'column',\r\n        //alignItems: 'center',\r\n        color: '#000000 ',\r\n        //backgroundColor: '#eeeeee'//theme.palette.primary.main,\r\n    },\r\n    MyLogo:{\r\n        height: '200px',\r\n        width:'200px',\r\n        backgroundColor: 'transparent',\r\n        position: \"relative\",\r\n    },\r\n    imgMacbok:{\r\n        backgroundColor: 'transparent',\r\n        position: \"relative\",\r\n        height:'200%'\r\n    },\r\n    cardMedia:{\r\n      paddingTop: \"56.25%\",\r\n      //borderRadius: theme.spacing(2), // 16px   \r\n      boxShadow: '0px 4px 4px rgba(34, 35, 58, 0.2)',\r\n        //position: 'relative'\r\n    },\r\n    \r\n    CardContent:{\r\n          margin:'auto',\r\n          maxWidth: 500,\r\n          //paddingBottom: theme.spacing(2),\r\n          flexGrow:1, \r\n          \r\n          //heigh:500\r\n    },\r\n\r\n    cardGrid:{\r\n          // 16px\r\n          //transition: '0.3s',\r\n          //boxShadow: '0px 14px 80px rgba(34, 35, 58, 0.2)',\r\n          //position: 'relative',\r\n          //maxWidth: 500,\r\n          //marginLeft: 'auto',\r\n          //overflow: 'initial',\r\n          \r\n          //background: theme.palette.primary.main, //'#ffffff',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          //alignItems: 'left',\r\n          //paddingBottom: 100,\r\n          //marginTop: theme.spacing(4)\r\n    },\r\n    cardItem:{\r\n      borderRadius: theme.spacing(2),  \r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: theme.palette.primary.main,\r\n      //paddingBottom: theme.spacing(2),\r\n      //marginBottom:theme.spacing(4),\r\n      \"&:hover\":{\r\n          //color: \"red\"\r\n          boxShadow: '0px 14px 14px rgba(34, 35, 58, 0.4)',\r\n        }\r\n    },\r\n\r\n}));\r\n    //const theme = useTheme();\r\n    const classes = useStyles();\r\n    const [darkMode, setDarkMode] = React.useState(props)\r\n\r\n    const cards = [\r\n      {id:\"1\",\r\n      title:'Database Development',\r\n      text:'One of the main directions of our work is the development of databases and database management systems (DBMS). We work with databases of various architectures (MySQL, MSSQL, Interbase, Firebird, Postgresql). The development of the software interface is carried out at the request of the customer on more convenient software for him, both for the Web interface and for the operating system API.',\r\n      img: imgDatabase\r\n      },\r\n    \r\n      {\r\n      id:\"2\",\r\n      title:'Protocol API Development',\r\n      text:'Development and use of REST requests in payment systems, in information collection systems of electronic metering devices, as well as the organization of dispatching',\r\n      img: imgServer\r\n    },\r\n    {\r\n      id:\"3\",\r\n      title:\"WEB Development\",\r\n      text:\"In today's world it is no longer possible to do without Web applications. I am engaged in FullStack development of Web applications to present your products and services to a wide audience, creating attractive and functional websites.\",\r\n      img: imgWebDev\r\n    }]\r\n    \r\n    const infoGrid = (\r\n      <Container className={classes.cardGrid}>\r\n            <Grid container spacing={4} justify='center'>\r\n                    {cards.map ((card)=> (\r\n                        <Grid item key={card.id} xs={12} md={4} lg={4}>\r\n                            <Card className={classes.cardItem}>\r\n                            <CardMedia \r\n                                    className={classes.cardMedia}\r\n                                    image={card.img}\r\n                                    //title=\"image card\"\r\n                            />\r\n                                <CardContent  className={classes.cardContext}>\r\n                                    <Typography variant=\"h5\" gutterBottom align='center'>\r\n                                        {card.title}\r\n                                    </Typography>\r\n                                    <Typography paragraph gutterBottom align='justify'>\r\n                                        {card.text}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>    \r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n    )\r\n    \r\n    React.useEffect(()=>{\r\n      console.log('HOME', darkMode)\r\n      setDarkMode(darkMode)\r\n  }, [darkMode])\r\n\r\n    return (\r\n      \r\n        <React.Fragment >\r\n\r\n      \r\n        {/*<div style={{height: '100px', backgroundImage:`${laptopItservis}`}}>\r\n        </div>*/}\r\n        <Parallax  pages={3}> {/*ref={ref => (parallax = ref)}*/}\r\n        <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#242424' }} /> \r\n        <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#242424' }} /> \r\n         {/* <ParallaxLayer offset={0} speed={0} factor={3} style={{ backgroundImage:  url('stars', true), backgroundSize: 'cover' }} /> */}\r\n        <ParallaxLayer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\r\n             {/* <img src={url('satellite4')} style={{ width: '15%', marginLeft: '70%' }} />  */}\r\n            <img src={logo} alt='' className='App-logo1' style={{ width: '10%', marginLeft: '5%' }} />\r\n            {infoGrid}\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.6, backgroundColor: 'transparent' }}>\r\n          <img src={react} alt='' style={{  display: 'block', backgroundColor: '#transparent', width: '10%', marginLeft: '55%' }} />\r\n          <img src={nodejs} alt='' style={{ display: 'block', width: '10%', marginLeft: '30%' }} />\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.5 }}>\r\n          <img src={html} alt='' style={{ display: 'block', width: '10%', marginLeft: '70%' }} />\r\n          <img src={angular} alt='' style={{ display: 'block', width: '10%', marginLeft: '40%' }} />\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.6}}>\r\n          <img src={sql} alt='' style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\r\n          <img src={s1} alt='' style={{ display: 'block', width: '10%', marginLeft: '75%' }} />\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\r\n          <img src={sql2} alt='' style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\r\n          <img src={sql} alt='' style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\r\n          <img src={arduino2} alt='' style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\r\n          <img src={delphi} alt='delphi' style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\r\n          <img src={vm} alt='vm'style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer offset={2.5} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\r\n          {/* <img  src={network4} style={{ width: '60%' }} alt='footer'/> */}\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          offset={2}\r\n          speed={-0.3}\r\n          style={{\r\n            backgroundSize: '80%',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `${network4}`\r\n          }}\r\n          >\r\n        </ParallaxLayer>    \r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0.9}\r\n          //onClick={() => props.parallax.scrollTo(1)}\r\n          style={{ display: 'flex', position:'sticky', margin: '0', top:'0px', left:'0px', backgroundImage:`${laptopItservis}`,\r\n          alignItems: 'center', justifyContent: 'center'}}>\r\n          <img src={macbook} alt='laptop' style={{ width: '60%',  }} /> \r\n          {/* {url('server')} */}\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          offset={0.4}\r\n          speed={0.3}\r\n          //onClick={() => props.parallax.scrollTo(2)}\r\n          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n     \r\n\r\n           <img src={url('bash')} style={{ width: '40%' }} /> \r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          offset={2}\r\n          speed={-1.0}\r\n          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n          //onClick={() => props.parallax.scrollTo(0)}\r\n          >\r\n          <img src={url('clients-main')} style={{ width: '40%' }} /> \r\n        </ParallaxLayer>\r\n    \r\n            </Parallax>\r\n        \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withTheme(Home);\r\n\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":18},{"ruleId":"52","severity":1,"message":"56","line":6,"column":38,"nodeType":"54","messageId":"55","endLine":6,"endColumn":48},{"ruleId":"52","severity":1,"message":"57","line":114,"column":12,"nodeType":"54","messageId":"55","endLine":114,"endColumn":25},{"ruleId":"52","severity":1,"message":"58","line":114,"column":27,"nodeType":"54","messageId":"55","endLine":114,"endColumn":43},{"ruleId":"48","replacedBy":"59"},{"ruleId":"50","replacedBy":"60"},{"ruleId":"52","severity":1,"message":"61","line":15,"column":8,"nodeType":"54","messageId":"55","endLine":15,"endColumn":12},{"ruleId":"52","severity":1,"message":"62","line":26,"column":22,"nodeType":"54","messageId":"55","endLine":26,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":260,"column":12,"nodeType":"65","endLine":260,"endColumn":62},{"ruleId":"63","severity":1,"message":"64","line":269,"column":11,"nodeType":"65","endLine":269,"endColumn":69},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'selectedIndex' is assigned a value but never used.","'setSelectedIndex' is assigned a value but never used.",["66"],["67"],"'rest' is defined but never used.","'useTheme' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]